name: Maven Build

on:
  schedule:
     - cron:  '0 12 * * 3' 
  push:
     branches:
     - master
     - playground
  pull_request:
      branches:
        - master

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
#     - uses: actions/labeler@v2
#       with:
#         repo-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v1
    - name: Run a one-line script
      run: |
        echo Running Maven Action to Build!
        echo $GITHUB_WORKSPACE
        ls gameoflife-web
  # ls game-of-life
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        java-package: jdk
    - name: Run a multi-line script
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |  
        mvn -f pom.xml package -DskipTests
#        echo "<settings><servers><server><id>github</id><username>OWNER</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml

#     - name: Run some echo's
#       run: |
#         echo "*******************"
#         echo ${{ github.workspace }}
#         echo "***********************"
#         ls -lart /home/runner/work/game-of-life/game-of-life
#         echo "-------------------------------------"
#         ls -lart /home/runner/work/game-of-life/game-of-life/gameoflife-web/target
#         echo "----------------------------------"
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
      # Artifact name
       name: gameoflife2.war
      # Directory containing files to upload
       path: ${{ github.workspace }}/gameoflife-web/target/gameoflife2.war
       
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
          # Name of the Azure Web App
          app-name: testpc
          # Applies to Web App only: Publish profile (*.publishsettings) file contents with Web Deploy secrets
          publish-profile: ${{ secrets.PUBLISH_PROFILE }}
  #         # Enter an existing Slot other than the Production slot
  #         slot-name: # optional, default is production
          # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
          package: ${{ github.workspace }}/gameoflife-web/target/gameoflife2.war
 
#***************** Build Docker image and push using docker commands
          
#     - name: Docker commands in my azureSHVM
#       run: |
#         echo "******************"
#         whoami
#         echo "******************"
#         pwd
#         echo "******************"
#         cd /home/testvm
#         echo "@@@@@@@@@@@@@@@@@@"
#         cat /root/TOKEN.txt | docker login docker.pkg.github.com -u PhanindraReddyP --password-stdin        
#         docker build -t game /root
#         docker tag game docker.pkg.github.com/phanindrareddyp/game-of-life/gameOL:1.0
#         docker push docker.pkg.github.com/phanindrareddyp/game-of-life/gameOL:1.0

#************** Download Build Artifact **************************

#     - name: Download a Build Artifact
#       uses: actions/download-artifact@v2
#       with:
#     # Artifact name
#        name: gameoflife2.war
#     # Destination path
#        path: /home/testvm

# ****************** Docker Build and Push Action ************************    
#     - name: Build and push Docker images
#       uses: docker/build-push-action@v1.1.0
#       with:
#     # Username used to log in to a Docker registry. If not set then no login will occur
#        username: PhanindraReddyP
#     # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
#        password: f2209dc81527a570713d10fe00f2abe7674845a6
#     # Server address of Docker registry. If not set then will default to Docker Hub
#        registry: docker.pkg.github.com
#     # Docker repository to tag the image with
#        repository: phanindrareddyp/game-of-life/game
#     # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
#        tags: 1.0
# #     # Path to the build context
# #        path: /home/testvm
#     # Path to the Dockerfile (Default is '{path}/Dockerfile')
#        dockerfile: /home/testvm/Dockerfile
#     # Whether to push the image
#        push: true      

#****************** Deploy to Azure APP Service *******************

#     - uses: azure/login@v1
#       with:
#          creds: '${{ secrets.AZURE_CREDENTIALS }}'
#     - name: Azure WebApp
#       uses: Azure/webapps-deploy@v1
#       with:
#     # Publish profile (*.publishsettings) file contents with Web Deploy secrets
#         publish-profile: ${{secrets.azureWebappPublishProfile}}
#     # Name of the Azure Web App
#         app-name: actiondeploy
#     # Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
#         package: ${{ github.workspace }}/gameoflife-web/target/gameoflife2.war
#     # Enter an existing Slot other than the Production slot
#     #   slot-name: # optional, default is production 
      
#     #- name: Azure App Service Settings
#     #  uses: Azure/appservice-settings@v1
#     #  with:
#     # Name of the Azure Web App
#     #    app-name: 'actiondeploy'
#     # Name of an existing slot other than the production slot. Default value is production
#     #    slot-name: # optional
#     # Application settings using the JSON syntax set as value of secret variable: APP_SETTINGS
#     #    app-settings-json: '${{ secrets.APP_SETTINGS }}'
#     # Connection Strings using the JSON syntax set as value of secret variable: CONNECTION_STRINGS
#     #    connection-strings-json: 
#     # General configuration settings using dictionary syntax - Key Value pairs
#     #    general-settings-json: # optional
#    #   id: settings
#   # - run: |
#     #    echo "The webapp-url is ${{ steps.settings.outputs.webapp-url }}"
#    #     echo Getting logged out
#     #    az logout
  
 
  
  
